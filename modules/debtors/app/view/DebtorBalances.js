/*
 * File: app/view/DebtorBalances.js
 * Date: Mon Aug 16 2021 14:09:43 GMT+0300 (E. Africa Standard Time)
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Debtors.view.DebtorBalances', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.debtorbalances',

    requires: [
        'Debtors.view.DebtorBalancesViewModel',
        'Ext.view.Table',
        'Ext.selection.RowModel',
        'Ext.toolbar.Paging',
        'Ext.toolbar.Spacer',
        'Ext.button.Button',
        'Ext.form.field.TextArea',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Date',
        'Ext.panel.Tool',
        'Ext.grid.column.Number'
    ],

    viewModel: {
        type: 'debtorbalances'
    },
    focusOnToFront: false,
    height: 670,
    minWidth: 800,
    scrollable: true,
    animCollapse: true,
    closable: true,
    collapsible: true,
    title: 'Debtor Balances',
    columnLines: true,
    forceFit: false,
    store: 'DebtorBalancesStore',

    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            width: 360,
            displayInfo: true,
            store: 'DebtorBalancesStore'
        },
        {
            xtype: 'toolbar',
            dock: 'top',
            frame: true,
            height: 29,
            items: [
                {
                    xtype: 'tbspacer',
                    height: 10,
                    width: 70
                },
                {
                    xtype: 'button',
                    height: 23,
                    width: 106,
                    text: 'Export List'
                },
                {
                    xtype: 'tbspacer',
                    height: 10,
                    width: 36
                },
                {
                    xtype: 'button',
                    itemId: 'cmdNewCustomer2',
                    text: 'New Customer'
                },
                {
                    xtype: 'tbspacer',
                    height: 10,
                    width: 37
                },
                {
                    xtype: 'button',
                    itemId: 'editCustomer2',
                    text: 'Edit Customer'
                },
                {
                    xtype: 'tbspacer',
                    height: 10,
                    width: 67
                },
                {
                    xtype: 'button',
                    itemId: 'cmdAddMembers2',
                    text: 'Add Members'
                }
            ]
        },
        {
            xtype: 'toolbar',
            dock: 'top',
            height: 63,
            width: 278,
            items: [
                {
                    xtype: 'textareafield',
                    height: 18,
                    itemId: 'txtDebtorsParams',
                    width: 257,
                    fieldLabel: 'Search Debtor',
                    labelWidth: 75
                },
                {
                    xtype: 'combobox',
                    itemId: 'debtorBalanceCategory',
                    fieldLabel: 'Filter by Category',
                    displayField: 'custNames',
                    store: 'CustomerType',
                    valueField: 'ID'
                },
                {
                    xtype: 'datefield',
                    itemId: 'startDate',
                    fieldLabel: 'Start Date',
                    labelWidth: 55
                },
                {
                    xtype: 'datefield',
                    itemId: 'endDate',
                    fieldLabel: 'End Date',
                    labelWidth: 50
                },
                {
                    xtype: 'button',
                    itemId: 'cmdSearchDebtorBalances',
                    width: 93,
                    text: '<b>Search</b>'
                }
            ]
        }
    ],
    tools: [
        {
            xtype: 'tool',
            type: 'maximize'
        },
        {
            xtype: 'tool',
            type: 'minimize'
        },
        {
            xtype: 'tool',
            type: 'restore'
        }
    ],
    columns: [
        {
            xtype: 'gridcolumn',
            width: 67,
            dataIndex: 'accno',
            text: 'Accno'
        },
        {
            xtype: 'gridcolumn',
            width: 148,
            dataIndex: 'debtorName',
            text: 'Debtor Name'
        },
        {
            xtype: 'gridcolumn',
            width: 55,
            dataIndex: 'transno',
            text: 'Transno'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'pid',
            text: 'Pid'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'encounter_nr',
            text: 'Encounter_nr'
        },
        {
            xtype: 'gridcolumn',
            width: 154,
            dataIndex: 'pnames',
            text: 'Pnames'
        },
        {
            xtype: 'gridcolumn',
            width: 87,
            dataIndex: 'lastTransDate',
            text: 'LastTransDate'
        },
        {
            xtype: 'gridcolumn',
            width: 67,
            dataIndex: 'billNumber',
            text: 'BillNumber'
        },
        {
            xtype: 'numbercolumn',
            dataIndex: 'amount',
            text: 'Amount'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'admDate',
            text: 'AdmDate'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'disDate',
            text: 'DisDate'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'encClass',
            text: 'EncClass'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'addr_zip',
            text: 'Addr_zip'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'addr_zip2',
            text: 'Addr_zip2'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'phone_1_nr',
            text: 'Phone_1_nr'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'email',
            text: 'Email'
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'cellphone_1_nr',
            text: 'Cellphone_1_nr'
        },
        {
            xtype: 'gridcolumn',
            width: 62,
            dataIndex: 'transType',
            text: 'TransType'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'allocated',
            text: 'Allocated'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'allocatedAmount',
            text: 'AllocatedAmount'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'invoiceBalance',
            text: 'InvoiceBalance'
        }
    ],

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                selModel: Ext.create('Ext.selection.RowModel', {
                    selType: 'rowmodel',
                    allowDeselect: true,
                    mode: 'SINGLE'
                })
            };
        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    }

});