/*
 * File: app/view/DebtorsList.js
 * Date: Fri Sep 28 2018 10:01:07 GMT+0300 (E. Africa Standard Time)
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Debtors.view.DebtorsList', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.debtorslist',

    requires: [
        'Debtors.view.DebtorsListViewModel',
        'Ext.view.Table',
        'Ext.selection.RowModel',
        'Ext.toolbar.Paging',
        'Ext.form.FieldContainer',
        'Ext.button.Button',
        'Ext.form.field.ComboBox',
        'Ext.grid.column.Column'
    ],

    viewModel: {
        type: 'debtorslist'
    },
    focusOnToFront: false,
    height: 600,
    itemId: 'debtorslist',
    minWidth: 800,
    scrollable: true,
    animCollapse: true,
    closable: true,
    collapsible: true,
    title: 'Debtors List',
    columnLines: true,
    forceFit: false,
    store: 'DebtorsList',
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            width: 360,
            displayInfo: true,
            store: 'DebtorsList'
        },
        {
            xtype: 'fieldcontainer',
            dock: 'top',
            height: 84,
            width: 100,
            layout: 'absolute',
            items: [
                {
                    xtype: 'button',
                    x: 15,
                    y: 5,
                    itemId: 'cmdNewCustomer1',
                    text: 'New Customer'
                },
                {
                    xtype: 'button',
                    x: 135,
                    y: 5,
                    itemId: 'editCustomer',
                    text: 'Edit Customer'
                },
                {
                    xtype: 'button',
                    x: 360,
                    y: 5,
                    itemId: 'cmdAddMembers2',
                    text: 'Add Members'
                },
                {
                    xtype: 'button',
                    x: 550,
                    y: 45,
                    itemId: 'cmdSearch',
                    width: 95,
                    text: 'Search'
                },
                {
                    xtype: 'button',
                    x: 475,
                    y: 5,
                    itemId: 'cmdRemoveMember2',
                    text: 'Remove Members from Insurance'
                },
                {
                    xtype: 'button',
                    x: 700,
                    y: 5,
                    height: 30,
                    width: 106,
                    text: 'Export List'
                },
                {
                    xtype: 'textfield',
                    x: 15,
                    y: 45,
                    height: 15,
                    itemId: 'txtDebtorsParams2',
                    width: 275,
                    fieldLabel: 'Search Debtor'
                },
                {
                    xtype: 'combobox',
                    x: 290,
                    y: 45,
                    itemId: 'debtorCategory2',
                    width: 265,
                    fieldLabel: 'Filter by Category',
                    labelWidth: 110,
                    displayField: 'custNames',
                    store: 'CustomerType',
                    valueField: 'ID',
                    listeners: {
                        change: 'onComboboxChange1'
                    }
                }
            ]
        }
    ],
    columns: [
        {
            xtype: 'gridcolumn',
            width: 74,
            dataIndex: 'accno',
            text: 'Account No'
        },
        {
            xtype: 'gridcolumn',
            width: 171,
            dataIndex: 'name',
            text: 'Name'
        },
        {
            xtype: 'gridcolumn',
            width: 140,
            dataIndex: 'category',
            text: 'Category'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'address1',
            text: 'Address'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'address2',
            text: 'City'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'aldtphone',
            text: 'Phone'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'aldtphone',
            text: 'Alt Phone'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'contact',
            text: 'Contact Person'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'email',
            text: 'Email'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'fax',
            text: 'Fax'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'joined',
            text: 'Joined'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'cr_limit',
            text: 'Cr_limit'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'OP_Cover',
            text: 'OP_Cover'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'IP_Cover',
            text: 'IP_Cover'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'OP_Usage',
            text: 'OP_Usage'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'IP_Usage',
            text: 'IP_Usage'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'OP_Exceed',
            text: 'OP_Exceed'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'IP_Exceed',
            text: 'IP_Exceed'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'assChief',
            text: 'AssChief'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'chief',
            text: 'Chief'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'creditLimit',
            text: 'CreditLimit'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'staffdiscount',
            text: 'Staff Discount'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'village',
            text: 'Village'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'villageElder',
            text: 'VillageElder'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'dbStatus',
            text: 'Debtor Status'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'location',
            text: 'Location'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'nearSchool',
            text: 'NearSchool'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'subLocation',
            text: 'SubLocation'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsName',
            text: 'GuarantorsName'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsID',
            text: 'GuarantorsID'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsLocation',
            text: 'GuarantorsLocation'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsSubLoc',
            text: 'GuarantorsSubLoc'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsVillage',
            text: 'GuarantorsVillage'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsAddress',
            text: 'GuarantorsAddress'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsPhone',
            text: 'GuarantorsPhone'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsRelation',
            text: 'GuarantorsRelation'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guaranteeDate',
            text: 'GuaranteeDate'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'guarantorsAmount',
            text: 'GuarantorsAmount'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'nextPaymentDate',
            text: 'nextPaymentDate'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'openingBL',
            text: 'openingBL'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'otherInfo',
            text: 'Other Info'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'statementInfo',
            text: 'statementInfo'
        }
    ],

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                selModel: Ext.create('Ext.selection.RowModel', {
                    selType: 'rowmodel',
                    allowDeselect: true,
                    mode: 'SINGLE'
                })
            };
        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    onComboboxChange1: function(field, newValue, oldValue, eOpts) {
        //alert('test '+field.value);
        var debtorsListStore=Ext.data.StoreManager.lookup('DebtorsList');
        debtorsListStore.load({
            params: {
                category: field.value
            },
            callback: function(records, operation, success) {


            },
            scope: this

        });
    }

});