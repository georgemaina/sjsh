/*
 * File: app/view/Prescriptions.js
 * Date: Mon May 18 2020 11:00:01 GMT+0300 (E. Africa Standard Time)
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CarePortal.view.Prescriptions', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.prescriptions',

    requires: [
        'CarePortal.view.PrescriptionsViewModel',
        'Ext.view.Table',
        'Ext.toolbar.Paging',
        'Ext.grid.column.Column'
    ],

    viewModel: {
        type: 'prescriptions'
    },
    minHeight: 300,
    title: 'Prescriptions',
    columnLines: true,
    store: 'PrescriptionStore',
    defaultListenerScope: true,

    viewConfig: {
        listeners: {
            refresh: 'onViewRefresh'
        }
    },
    dockedItems: [
        {
            xtype: 'pagingtoolbar',
            dock: 'bottom',
            width: 360,
            displayInfo: true,
            store: 'PrescriptionStore'
        }
    ],
    columns: [
        {
            xtype: 'gridcolumn',
            dataIndex: 'Status',
            text: 'Status'
        },
        {
            xtype: 'gridcolumn',
            width: 76,
            dataIndex: 'Pid',
            text: 'Pid'
        },
        {
            xtype: 'gridcolumn',
            width: 71,
            dataIndex: 'PartCode',
            text: 'Part Code'
        },
        {
            xtype: 'gridcolumn',
            width: 154,
            dataIndex: 'Description',
            text: 'Description'
        },
        {
            xtype: 'gridcolumn',
            width: 52,
            dataIndex: 'Dosage',
            text: 'Dosage'
        },
        {
            xtype: 'gridcolumn',
            width: 64,
            dataIndex: 'TimesPerDay',
            text: 'Times Per Day'
        },
        {
            xtype: 'gridcolumn',
            width: 49,
            dataIndex: 'Days',
            text: 'Days'
        },
        {
            xtype: 'gridcolumn',
            width: 56,
            dataIndex: 'Price',
            text: 'Price'
        },
        {
            xtype: 'gridcolumn',
            width: 56,
            dataIndex: 'Total',
            text: 'Total'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'EncounterNo',
            text: 'Encounter No'
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'PrescribeDate',
            text: 'Prescribe Date'
        }
    ],

    onViewRefresh: function(dataview, eOpts) {
        // get all grid view nodes
        var nodes = dataview.getNodes();

        for (var i = 0; i < nodes.length; i++) {

            var node = nodes[i];

            // get node record
            var record = dataview.getRecord(node);

            // get color from record data
            var pendingColor = '#FF0000'; //record.get('StatusColor');
            var servicedColor = '#3CB371'; //record.get('StatusColor');

            var status=record.get('Status');

            // get all td elements
            var cells = Ext.get(node).query('td');

            // set bacground color to all row td elements
            for(var j = 0; j < cells.length; j++) {
                // Ext.Msg.alert('test', j);

                if(j===0 && status==='pending'){
                    Ext.fly(cells[j]).setStyle('background-color', pendingColor);
                    Ext.fly(cells[j]).setStyle('color', 'white');
                }else if(j===0 && status==='serviced'){
                    Ext.fly(cells[j]).setStyle('background-color', servicedColor);
                    Ext.fly(cells[j]).setStyle('color', '#FFFFFF');
                }

            }
        }
    }

});